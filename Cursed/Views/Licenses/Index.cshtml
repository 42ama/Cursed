@using Cursed.Models.DataModel.Licenses
@model Pagenation<LicensesViewModel>
@{
    ViewData["Title"] = "Index";
    ViewData["PagenationRouteLink"] = LicensesRouting.Index;
    string attentionColor;
    string licenseSummary;
}

<h1>Licenses</h1>
<p>@Html.RouteLink("Add", LicensesRouting.GetEditSingleItem)</p>
@await Html.PartialAsync("_Pagenation/ItemsOnPageControl", (PagenationAbstract)Model, ViewData)
@await Html.PartialAsync("_Pagenation/PagesControl", (PagenationAbstract)Model, ViewData)
<table>
    <thead>
        <tr>
            <td style="text-align:center"><p>License</p><p>number</p></td>
            <td style="text-align:center">Product name</td>
            <td style="text-align:center">Product CAS</td>
            <td style="text-align:center"><p>Licensed</p><p>until</p></td>
            <td style="text-align:center"><p>License</p><p>summary</p></td>
            <td style="text-align:center"><!--for edit/delete button--></td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PagenatedCollection)
        {
            if (item.IsValid)
            {
                attentionColor = "green";
                licenseSummary = "Valid";
            }
            else
            {
                attentionColor = "red";
                licenseSummary = "Not valid";
            }
        <tr>
            <td style="text-align:center">@item.GovermentNum</td>
            <td style="text-align:center">@Html.RouteLink(item.ProductName, ProductsCatalogRouting.SingleItem, new { key = item.ProductId })</td>
            <td style="text-align:center">@Html.RouteLink(item.ProductCAS.ToString(), ProductsCatalogRouting.SingleItem, new { key = item.ProductId })</td>
            <td style="text-align:center">@item.Date</td>
            <td style="text-align:center" bgcolor="@attentionColor">@licenseSummary</td>
            <td style="text-align:center">
                <p>@Html.RouteLink("Show", LicensesRouting.SingleItem, new { key = item.Id })</p>
                <p>@Html.RouteLink("Edit", LicensesRouting.GetEditSingleItem, new { key = item.Id })</p>
                <form asp-antiforgery="true" method="post" asp-route="@LicensesRouting.DeleteSingleItem">
                    <input hidden type="number" name="key" value="@item.Id" />
                    <input type="submit" class="btn btn-dark" value="Delete" />
                </form>
            </td>
        </tr>
        }
    </tbody>
</table>
@await Html.PartialAsync("_Pagenation/PrevNextControl", (PagenationAbstract)Model, ViewData)