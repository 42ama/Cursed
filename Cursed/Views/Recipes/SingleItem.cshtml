@using Cursed.Models.Data.Recipes
@using Cursed.Models.Data.Utility
@using Cursed.Models.Data.Shared
@model RecipeModel
@{
    ViewData["Title"] = "SingleItem";
}
<h1>RecipeId: @Model.Id</h1>
<p>@Html.RouteLink("Edit", RecipesRouting.GetEditSingleItem, new { key = Model.Id })</p>
<p>@Html.RouteLink("Change products", RecipeProductsRouting.Index, new { key = Model.Id })</p>
<form asp-antiforgery="true" method="post" asp-route="@RecipesRouting.DeleteSingleItem">
    <input hidden type="number" name="key" value="@Model.Id" />
    <input type="submit" class="btn btn-dark" value="Delete" />
</form>
<table>
    <tr>
        <td>Id:</td>
        <td>@Model.Id</td>
    </tr>
    <tr>
        <td>Content:</td>
        <td>@Model.Content</td>
    </tr>
    <tr>
        <td>Technical Approval:</td>
        <td>@Model.TechApproved</td>
    </tr>
    <tr>
        <td>Goverment Approval:</td>
        <td>@Model.GovApproved</td>
    </tr>
    <tr>
        <td>Materials:</td>
        <td>
            <table>
                <thead>
                    <tr>
                        <td>Material</td>
                        <td>CAS</td>
                        <td>Consumed</td>
                    </tr>
                </thead>
                @foreach (var item in Model.RecipeProducts.Where(i => i.Type == ProductCatalogTypes.Material))
                {
                    <tr>
                        <td>@Html.RouteLink(item.ProductName, ProductsCatalogRouting.SingleItem, new { key = item.ProductId })</td>
                        @if(item.CAS.HasValue)
                        {
                            <td>@Html.RouteLink(item.CAS.Value.ToString(), ProductsCatalogRouting.SingleItem, new { key = item.ProductId })</td>
                        }
                        else
                        {
                            <td>None</td>
                        }

                        <td>@item.Quantity mg</td>
                    </tr>
                }
            </table>
        </td>
    </tr>
    <tr>
        <td>Products:</td>
        <td>
            <table>
                <thead>
                    <tr>
                        <td>Product</td>
                        <td>CAS</td>
                        <td>Produced</td>
                    </tr>
                </thead>
                @foreach (var item in Model.RecipeProducts.Where(i => i.Type == ProductCatalogTypes.Product))
                {
                    <tr>
                        <td>@Html.RouteLink(item.ProductName, ProductsCatalogRouting.SingleItem, new { key = item.ProductId })</td>
                        @if(item.CAS.HasValue)
                        {
                            <td>@Html.RouteLink(item.CAS.Value.ToString(), ProductsCatalogRouting.SingleItem, new { key = item.ProductId })</td>
                        }
                        else
                        {
                            <td>None</td>
                        }
                        <td>@item.Quantity mg</td>
                    </tr>
                }
            </table>
        </td>
    </tr>
    <tr>
        <td>Parent:</td>
            @if(Model.ParentRecipe != null)
            {
                <td>@Html.RouteLink(Model.ParentRecipe.ToString(), RecipesRouting.SingleItem, new { key = Model.ParentRecipe })</td>
            }
            else
            {
                <td>None</td>
            }
    </tr>
    <tr>
        <td>Childs:</td>
        <td>
            @foreach (var item in Model.ChildRecipes)
            {
                <p>@Html.RouteLink(item.ToString(), RecipesRouting.SingleItem, new { key = item })</p>
            }
        </td>
    </tr>
</table>